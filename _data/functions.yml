---

#enumerate-users:
#  label: User Enumeration
#  description: Techniques to either guess or confirm valid users in a system. User enumeration is often a web application vulnerability, though it can also be found in any system that requires user authentication.

fuzzing:
  label: Fuzzing
  description: Fuzzing or fuzz testing is an automated technique that involves providing a large variety of input data, hoping to induce an unexpected response.

privesc:
  label: Privilege Escalation
  description: Privilege escalation involved exploiting a bug, design flaw or misconfiguration to gain elevated access and perform unauthorized actions. For example, escalating from a restrictive shell as user www-data, to a session as root.

sql-injection:
  label: SQL Injection
  description: Code injection technique, used to attack data-driven applications, in which malicious SQL statements are inserted into an entry field for execution.

enum-dirs:
  label: Directory Enumeration
  description: Techniques to either guess or confirm valid directories. Directory enumeration is often a web application attack, though it can also be leveraged on any system with a directory structure.

cracking:
  label: Hash Cracking
  description:  Recovering plaintext passwords from cryptographic hashes. Rapid and automatic guessing of password, comparison to hash, check for match, and repeat. Time for attack completion highly dependant on password complexity and hashing algorithm.

bf-login:
  label: Brute Force Login
  description: Rapid and automatic attempts to log in using a list of passwords and/or usernames. Can apply to any service or process requiring authentication.

shells:
  label: Shells
  description: A shell is a user interface for access to an operating system's services. Different services allow sending commands to remote hosts across networks. A shell can also refer to an active session / connection to a target.

obfuscation:
  label: Obfuscation
  description: Obfuscation involves obscuring information by making it difficult to understand and detect. Weaker than encryption, these methods can usually be reverse engineered and are intended as a more temporary method of disguising payloads or network communications.